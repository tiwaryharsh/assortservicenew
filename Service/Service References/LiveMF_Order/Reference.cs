//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service.LiveMF_Order {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://bsestarmf.in/", ConfigurationName="LiveMF_Order.MFOrderEntry")]
    public interface MFOrderEntry {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/getPassword", ReplyAction="http://bsestarmf.in/MFOrderEntry/getPasswordResponse")]
        string getPassword(string UserId, string Password, string PassKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/getPassword", ReplyAction="http://bsestarmf.in/MFOrderEntry/getPasswordResponse")]
        System.Threading.Tasks.Task<string> getPasswordAsync(string UserId, string Password, string PassKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/orderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/orderEntryParamResponse")]
        string orderEntryParam(
                    string TransCode, 
                    string TransNo, 
                    string OrderId, 
                    string UserID, 
                    string MemberId, 
                    string ClientCode, 
                    string SchemeCd, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderVal, 
                    string Qty, 
                    string AllRedeem, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string RefNo, 
                    string SubBrCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string DPC, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Parma1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/orderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/orderEntryParamResponse")]
        System.Threading.Tasks.Task<string> orderEntryParamAsync(
                    string TransCode, 
                    string TransNo, 
                    string OrderId, 
                    string UserID, 
                    string MemberId, 
                    string ClientCode, 
                    string SchemeCd, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderVal, 
                    string Qty, 
                    string AllRedeem, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string RefNo, 
                    string SubBrCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string DPC, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Parma1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/spreadOrderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/spreadOrderEntryParamResponse")]
        string spreadOrderEntryParam(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string OrderID, 
                    string UserID, 
                    string MemberId, 
                    string ClientCode, 
                    string SchemeCode, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderValue, 
                    string RedemptionAmt, 
                    string AllUnitFlag, 
                    string RedeemDate, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string RefNo, 
                    string SubBroCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string DPC, 
                    string IPAddress, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/spreadOrderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/spreadOrderEntryParamResponse")]
        System.Threading.Tasks.Task<string> spreadOrderEntryParamAsync(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string OrderID, 
                    string UserID, 
                    string MemberId, 
                    string ClientCode, 
                    string SchemeCode, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderValue, 
                    string RedemptionAmt, 
                    string AllUnitFlag, 
                    string RedeemDate, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string RefNo, 
                    string SubBroCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string DPC, 
                    string IPAddress, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/switchOrderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/switchOrderEntryParamResponse")]
        string switchOrderEntryParam(
                    string TransCode, 
                    string TransNo, 
                    string OrderId, 
                    string UserId, 
                    string MemberId, 
                    string ClientCode, 
                    string FromSchemeCd, 
                    string ToSchemeCd, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderVal, 
                    string SwitchUnits, 
                    string AllUnitsFlag, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string SubBrCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Parma1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/switchOrderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/switchOrderEntryParamResponse")]
        System.Threading.Tasks.Task<string> switchOrderEntryParamAsync(
                    string TransCode, 
                    string TransNo, 
                    string OrderId, 
                    string UserId, 
                    string MemberId, 
                    string ClientCode, 
                    string FromSchemeCd, 
                    string ToSchemeCd, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderVal, 
                    string SwitchUnits, 
                    string AllUnitsFlag, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string SubBrCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Parma1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/sipOrderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/sipOrderEntryParamResponse")]
        string sipOrderEntryParam(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string SchemeCode, 
                    string MemberCode, 
                    string ClientCode, 
                    string UserID, 
                    string InternalRefNo, 
                    string TransMode, 
                    string DpTxnMode, 
                    string StartDate, 
                    string FrequencyType, 
                    string FrequencyAllowed, 
                    string InstallmentAmount, 
                    string NoOfInstallment, 
                    string Remarks, 
                    string FolioNo, 
                    string FirstOrderFlag, 
                    string SubberCode, 
                    string Euin, 
                    string EuinVal, 
                    string DPC, 
                    string RegId, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/sipOrderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/sipOrderEntryParamResponse")]
        System.Threading.Tasks.Task<string> sipOrderEntryParamAsync(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string SchemeCode, 
                    string MemberCode, 
                    string ClientCode, 
                    string UserID, 
                    string InternalRefNo, 
                    string TransMode, 
                    string DpTxnMode, 
                    string StartDate, 
                    string FrequencyType, 
                    string FrequencyAllowed, 
                    string InstallmentAmount, 
                    string NoOfInstallment, 
                    string Remarks, 
                    string FolioNo, 
                    string FirstOrderFlag, 
                    string SubberCode, 
                    string Euin, 
                    string EuinVal, 
                    string DPC, 
                    string RegId, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/xsipOrderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/xsipOrderEntryParamResponse")]
        string xsipOrderEntryParam(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string SchemeCode, 
                    string MemberCode, 
                    string ClientCode, 
                    string UserId, 
                    string InternalRefNo, 
                    string TransMode, 
                    string DpTxnMode, 
                    string StartDate, 
                    string FrequencyType, 
                    string FrequencyAllowed, 
                    string InstallmentAmount, 
                    string NoOfInstallment, 
                    string Remarks, 
                    string FolioNo, 
                    string FirstOrderFlag, 
                    string Brokerage, 
                    string MandateID, 
                    string SubberCode, 
                    string Euin, 
                    string EuinVal, 
                    string DPC, 
                    string XsipRegID, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bsestarmf.in/MFOrderEntry/xsipOrderEntryParam", ReplyAction="http://bsestarmf.in/MFOrderEntry/xsipOrderEntryParamResponse")]
        System.Threading.Tasks.Task<string> xsipOrderEntryParamAsync(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string SchemeCode, 
                    string MemberCode, 
                    string ClientCode, 
                    string UserId, 
                    string InternalRefNo, 
                    string TransMode, 
                    string DpTxnMode, 
                    string StartDate, 
                    string FrequencyType, 
                    string FrequencyAllowed, 
                    string InstallmentAmount, 
                    string NoOfInstallment, 
                    string Remarks, 
                    string FolioNo, 
                    string FirstOrderFlag, 
                    string Brokerage, 
                    string MandateID, 
                    string SubberCode, 
                    string Euin, 
                    string EuinVal, 
                    string DPC, 
                    string XsipRegID, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MFOrderEntryChannel : Service.LiveMF_Order.MFOrderEntry, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MFOrderEntryClient : System.ServiceModel.ClientBase<Service.LiveMF_Order.MFOrderEntry>, Service.LiveMF_Order.MFOrderEntry {
        
        public MFOrderEntryClient() {
        }
        
        public MFOrderEntryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MFOrderEntryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MFOrderEntryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MFOrderEntryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getPassword(string UserId, string Password, string PassKey) {
            return base.Channel.getPassword(UserId, Password, PassKey);
        }
        
        public System.Threading.Tasks.Task<string> getPasswordAsync(string UserId, string Password, string PassKey) {
            return base.Channel.getPasswordAsync(UserId, Password, PassKey);
        }
        
        public string orderEntryParam(
                    string TransCode, 
                    string TransNo, 
                    string OrderId, 
                    string UserID, 
                    string MemberId, 
                    string ClientCode, 
                    string SchemeCd, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderVal, 
                    string Qty, 
                    string AllRedeem, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string RefNo, 
                    string SubBrCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string DPC, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Parma1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.orderEntryParam(TransCode, TransNo, OrderId, UserID, MemberId, ClientCode, SchemeCd, BuySell, BuySellType, DPTxn, OrderVal, Qty, AllRedeem, FolioNo, Remarks, KYCStatus, RefNo, SubBrCode, EUIN, EUINVal, MinRedeem, DPC, IPAdd, Password, PassKey, Parma1, Param2, Param3);
        }
        
        public System.Threading.Tasks.Task<string> orderEntryParamAsync(
                    string TransCode, 
                    string TransNo, 
                    string OrderId, 
                    string UserID, 
                    string MemberId, 
                    string ClientCode, 
                    string SchemeCd, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderVal, 
                    string Qty, 
                    string AllRedeem, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string RefNo, 
                    string SubBrCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string DPC, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Parma1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.orderEntryParamAsync(TransCode, TransNo, OrderId, UserID, MemberId, ClientCode, SchemeCd, BuySell, BuySellType, DPTxn, OrderVal, Qty, AllRedeem, FolioNo, Remarks, KYCStatus, RefNo, SubBrCode, EUIN, EUINVal, MinRedeem, DPC, IPAdd, Password, PassKey, Parma1, Param2, Param3);
        }
        
        public string spreadOrderEntryParam(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string OrderID, 
                    string UserID, 
                    string MemberId, 
                    string ClientCode, 
                    string SchemeCode, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderValue, 
                    string RedemptionAmt, 
                    string AllUnitFlag, 
                    string RedeemDate, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string RefNo, 
                    string SubBroCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string DPC, 
                    string IPAddress, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.spreadOrderEntryParam(TransactionCode, UniqueRefNo, OrderID, UserID, MemberId, ClientCode, SchemeCode, BuySell, BuySellType, DPTxn, OrderValue, RedemptionAmt, AllUnitFlag, RedeemDate, FolioNo, Remarks, KYCStatus, RefNo, SubBroCode, EUIN, EUINVal, MinRedeem, DPC, IPAddress, Password, PassKey, Param1, Param2, Param3);
        }
        
        public System.Threading.Tasks.Task<string> spreadOrderEntryParamAsync(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string OrderID, 
                    string UserID, 
                    string MemberId, 
                    string ClientCode, 
                    string SchemeCode, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderValue, 
                    string RedemptionAmt, 
                    string AllUnitFlag, 
                    string RedeemDate, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string RefNo, 
                    string SubBroCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string DPC, 
                    string IPAddress, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.spreadOrderEntryParamAsync(TransactionCode, UniqueRefNo, OrderID, UserID, MemberId, ClientCode, SchemeCode, BuySell, BuySellType, DPTxn, OrderValue, RedemptionAmt, AllUnitFlag, RedeemDate, FolioNo, Remarks, KYCStatus, RefNo, SubBroCode, EUIN, EUINVal, MinRedeem, DPC, IPAddress, Password, PassKey, Param1, Param2, Param3);
        }
        
        public string switchOrderEntryParam(
                    string TransCode, 
                    string TransNo, 
                    string OrderId, 
                    string UserId, 
                    string MemberId, 
                    string ClientCode, 
                    string FromSchemeCd, 
                    string ToSchemeCd, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderVal, 
                    string SwitchUnits, 
                    string AllUnitsFlag, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string SubBrCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Parma1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.switchOrderEntryParam(TransCode, TransNo, OrderId, UserId, MemberId, ClientCode, FromSchemeCd, ToSchemeCd, BuySell, BuySellType, DPTxn, OrderVal, SwitchUnits, AllUnitsFlag, FolioNo, Remarks, KYCStatus, SubBrCode, EUIN, EUINVal, MinRedeem, IPAdd, Password, PassKey, Parma1, Param2, Param3);
        }
        
        public System.Threading.Tasks.Task<string> switchOrderEntryParamAsync(
                    string TransCode, 
                    string TransNo, 
                    string OrderId, 
                    string UserId, 
                    string MemberId, 
                    string ClientCode, 
                    string FromSchemeCd, 
                    string ToSchemeCd, 
                    string BuySell, 
                    string BuySellType, 
                    string DPTxn, 
                    string OrderVal, 
                    string SwitchUnits, 
                    string AllUnitsFlag, 
                    string FolioNo, 
                    string Remarks, 
                    string KYCStatus, 
                    string SubBrCode, 
                    string EUIN, 
                    string EUINVal, 
                    string MinRedeem, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Parma1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.switchOrderEntryParamAsync(TransCode, TransNo, OrderId, UserId, MemberId, ClientCode, FromSchemeCd, ToSchemeCd, BuySell, BuySellType, DPTxn, OrderVal, SwitchUnits, AllUnitsFlag, FolioNo, Remarks, KYCStatus, SubBrCode, EUIN, EUINVal, MinRedeem, IPAdd, Password, PassKey, Parma1, Param2, Param3);
        }
        
        public string sipOrderEntryParam(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string SchemeCode, 
                    string MemberCode, 
                    string ClientCode, 
                    string UserID, 
                    string InternalRefNo, 
                    string TransMode, 
                    string DpTxnMode, 
                    string StartDate, 
                    string FrequencyType, 
                    string FrequencyAllowed, 
                    string InstallmentAmount, 
                    string NoOfInstallment, 
                    string Remarks, 
                    string FolioNo, 
                    string FirstOrderFlag, 
                    string SubberCode, 
                    string Euin, 
                    string EuinVal, 
                    string DPC, 
                    string RegId, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.sipOrderEntryParam(TransactionCode, UniqueRefNo, SchemeCode, MemberCode, ClientCode, UserID, InternalRefNo, TransMode, DpTxnMode, StartDate, FrequencyType, FrequencyAllowed, InstallmentAmount, NoOfInstallment, Remarks, FolioNo, FirstOrderFlag, SubberCode, Euin, EuinVal, DPC, RegId, IPAdd, Password, PassKey, Param1, Param2, Param3);
        }
        
        public System.Threading.Tasks.Task<string> sipOrderEntryParamAsync(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string SchemeCode, 
                    string MemberCode, 
                    string ClientCode, 
                    string UserID, 
                    string InternalRefNo, 
                    string TransMode, 
                    string DpTxnMode, 
                    string StartDate, 
                    string FrequencyType, 
                    string FrequencyAllowed, 
                    string InstallmentAmount, 
                    string NoOfInstallment, 
                    string Remarks, 
                    string FolioNo, 
                    string FirstOrderFlag, 
                    string SubberCode, 
                    string Euin, 
                    string EuinVal, 
                    string DPC, 
                    string RegId, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.sipOrderEntryParamAsync(TransactionCode, UniqueRefNo, SchemeCode, MemberCode, ClientCode, UserID, InternalRefNo, TransMode, DpTxnMode, StartDate, FrequencyType, FrequencyAllowed, InstallmentAmount, NoOfInstallment, Remarks, FolioNo, FirstOrderFlag, SubberCode, Euin, EuinVal, DPC, RegId, IPAdd, Password, PassKey, Param1, Param2, Param3);
        }
        
        public string xsipOrderEntryParam(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string SchemeCode, 
                    string MemberCode, 
                    string ClientCode, 
                    string UserId, 
                    string InternalRefNo, 
                    string TransMode, 
                    string DpTxnMode, 
                    string StartDate, 
                    string FrequencyType, 
                    string FrequencyAllowed, 
                    string InstallmentAmount, 
                    string NoOfInstallment, 
                    string Remarks, 
                    string FolioNo, 
                    string FirstOrderFlag, 
                    string Brokerage, 
                    string MandateID, 
                    string SubberCode, 
                    string Euin, 
                    string EuinVal, 
                    string DPC, 
                    string XsipRegID, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.xsipOrderEntryParam(TransactionCode, UniqueRefNo, SchemeCode, MemberCode, ClientCode, UserId, InternalRefNo, TransMode, DpTxnMode, StartDate, FrequencyType, FrequencyAllowed, InstallmentAmount, NoOfInstallment, Remarks, FolioNo, FirstOrderFlag, Brokerage, MandateID, SubberCode, Euin, EuinVal, DPC, XsipRegID, IPAdd, Password, PassKey, Param1, Param2, Param3);
        }
        
        public System.Threading.Tasks.Task<string> xsipOrderEntryParamAsync(
                    string TransactionCode, 
                    string UniqueRefNo, 
                    string SchemeCode, 
                    string MemberCode, 
                    string ClientCode, 
                    string UserId, 
                    string InternalRefNo, 
                    string TransMode, 
                    string DpTxnMode, 
                    string StartDate, 
                    string FrequencyType, 
                    string FrequencyAllowed, 
                    string InstallmentAmount, 
                    string NoOfInstallment, 
                    string Remarks, 
                    string FolioNo, 
                    string FirstOrderFlag, 
                    string Brokerage, 
                    string MandateID, 
                    string SubberCode, 
                    string Euin, 
                    string EuinVal, 
                    string DPC, 
                    string XsipRegID, 
                    string IPAdd, 
                    string Password, 
                    string PassKey, 
                    string Param1, 
                    string Param2, 
                    string Param3) {
            return base.Channel.xsipOrderEntryParamAsync(TransactionCode, UniqueRefNo, SchemeCode, MemberCode, ClientCode, UserId, InternalRefNo, TransMode, DpTxnMode, StartDate, FrequencyType, FrequencyAllowed, InstallmentAmount, NoOfInstallment, Remarks, FolioNo, FirstOrderFlag, Brokerage, MandateID, SubberCode, Euin, EuinVal, DPC, XsipRegID, IPAdd, Password, PassKey, Param1, Param2, Param3);
        }
    }
}
